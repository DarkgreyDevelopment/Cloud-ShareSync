name: Publish PreRelease
on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: develop
    permissions:
      contents: read
      packages: write
    env:
      DOTNET_NOLOGO: true

    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Build Cloud-ShareSync
        shell: pwsh
        run: |
          $BuildScript = (Resolve-Path -Path ./build/BuildCloudShareSync.ps1).Path
          $Params = @{
            SOURCEPATH  = (Get-Location).Path
            PUBLISHPATH = Join-Path -Path "$env:GITHUB_WORKSPACE" -ChildPath 'publish'
            Verbose     = $true
          }
          & $BuildScript @Params

      - name: Upload Windows selfcontained artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows.portable.${{ github.sha }}
          path: ${{ github.workspace }}/publish/selfcontained/windows

      - name: Upload Windows framework artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows.framework.${{ github.sha }}
          path: ${{ github.workspace }}/publish/framework/windows

      - name: Upload Linux selfcontained artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux.portable.${{ github.sha }}
          path: ${{ github.workspace }}/publish/selfcontained/linux

      - name: Upload Linux framework artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux.framework.${{ github.sha }}
          path: ${{ github.workspace }}/publish/framework/linux

      - name: Upload MacOS selfcontained artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos.portable.${{ github.sha }}
          path: ${{ github.workspace }}/publish/selfcontained/macos

      - name: Upload MacOS framework artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos.framework.${{ github.sha }}
          path: ${{ github.workspace }}/publish/framework/macos

      - name: Create DockerFiles
        shell: pwsh
        run: |
          $Script = (Resolve-Path -Path ./build/DockerBuild.ps1).Path
          $Params = @{
            Backup  = $true
            Restore = $true
            NoBuild = $true
          }
          & $Script @Params

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker - (cloud-sharesync.backup)
        id: meta-backup
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}.backup
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,format=long
            type=raw,value=backup-prerelease-{{date 'YYYYMMDD'}}
            type=raw,value=backup-{{branch}}-{{date 'YYYYMMDD'}}

      - name: Build and push Docker image - (cloud-sharesync.backup)
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: ./docker/BackupDockerfile
          context: ${{ github.workspace }}
          push: true
          tags: ${{ steps.meta-backup.outputs.tags }}
          labels: ${{ steps.meta-backup.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker - (cloud-sharesync.restore)
        id: meta-restore
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}.restore
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,format=long
            type=raw,value=restore-prerelease-{{date 'YYYYMMDD'}}
            type=raw,value=restore-{{branch}}-{{date 'YYYYMMDD'}}

      - name: Build and push Docker image - (cloud-sharesync.restore)
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: ./docker/RestoreDockerfile
          context: ${{ github.workspace }}
          push: true
          tags: ${{ steps.meta-restore.outputs.tags }}
          labels: ${{ steps.meta-restore.outputs.labels }}
