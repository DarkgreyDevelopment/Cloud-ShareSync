name: Publish PreRelease
on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      tags:
        description: 'PreRelease Tag'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: develop
    permissions:
      contents: read
      packages: write
    env:
      DOTNET_NOLOGO: true

    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push SimpleBackup Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: ./src/SimpleBackup/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}, ${{ github.event.inputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build SimpleBackup
        shell: pwsh
        run: |
          $BuildScript = (Resolve-Path -Path ./build/BuildSimpleBackup.ps1).Path
          $Params = @{
            SOURCEPATH  = (Get-Location).Path
            PUBLISHPATH = Join-Path -Path "$env:GITHUB_WORKSPACE" -ChildPath 'Publish'
            Verbose     = $true
          }
          & $BuildScript @Params
          Get-ChildItem -Path $Params['PUBLISHPATH'] | Select-Object -Property Name,Size | Format-List | Out-String
      - run: |
          echo "Job status: ${{ job.status }}"
